
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/vhrmLayoutBlock.cshtml";
}

<style>
    .demo-section p {
        margin: 3px 0 20px;
        line-height: 50px;
    }

    .demo-section .k-button {
        width: 250px;
    }


    /* Notifications */
    .k-notification h3 {
        padding: 30px 10px 5px;
        font-size: 1em;
        line-height: normal;
    }

    .k-notification img {
        margin: 20px;
        float: left;
    }


    /* Info template */
    .new-mail {
        width: 300px;
        height: 100px;
    }

    /* Error template */
    .wrong-pass {
        width: 300px;
        height: 100px;
    }

    /* Success template */
    .upload-success {
        width: 300px;
        height: 100px;
    }


    /* For Bootstrap v4 theme */
    .k-bootstrap-v4 .k-notification h3 {
        padding: 10px 10px 5px;
    }

    .k-bootstrap-v4 .k-notification img {
        margin: 10px 20px 0 0;
    }

    .k-bootstrap-v4 .new-mail,
    .k-bootstrap-v4 .wrong-pass,
    .k-bootstrap-v4 .upload-success {
        width: calc( 300px - 2.5rem );
        height: calc( 100px - 1.5rem );
    }


    /* For Material v2 theme */
    .k-material-v2 .k-notification h3 {
        padding: 10px 10px 5px;
    }

    .k-material-v2 .k-notification img {
        margin: 10px 20px 0 0;
    }

    .k-material-v2 .new-mail,
    .k-material-v2 .wrong-pass,
    .k-material-v2 .upload-success {
        width: 270px;
        height: 70px;
    }

</style>

@(Html.Kendo().Notification()
    .Name("notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Stacking(NotificationStackingSettings.Down)
    .AutoHideAfter(1000)
    .Templates(t =>
    {
        //t.Add().Type("info").ClientTemplateID("emailTemplate");
        //t.Add().Type("error").ClientTemplateID("errorTemplate");
        t.Add().Type("success").ClientTemplateID("successTemplate");
    })
)

<script id="successTemplate" type="text/x-kendo-template">
    <div class="upload-success">
        <h3>#= message #</h3>
    </div>
</script>

<div class="hrm-block-tree">
    <div class="k-content hrm-tree-left" style="max-height: 100vh">
        @(Html.Kendo().TreeView()
                    .Name("treeviewMenu")
                    .DataTextField("Name")
                    .DataSource(dataSource => dataSource
                        .Read(read => read
                            .Action("getAllMenu", "MenuConfig")
                        )
                    )
                    .Events(evs =>
                    {
                        evs.Change("trvMenuChange");
                        evs.Select("trvMenuSelect");
                    })
                    .HighlightPath(true)
        )
    </div>

    @(Html.Kendo().Dialog()
                .Name("formDialog")
                .Visible(false)
                .Title("Members")
                .Content(
                    Html.Kendo().Grid<vhrm.FrameWork.Entity.eForm>()
                        .Name("gridForm")
                        .AutoBind(false)
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.FORM_CODE).Width(120).Title("Form Id");
                            columns.Bound(c => c.FORM_NAME).Width(120).Title("Form Name");
                            columns.Bound(c => c.FILE_PATH).Width(200).Title("File Path");
                        })
                        .Selectable(selectable => selectable
                            .Mode(GridSelectionMode.Single))
                        .Filterable()
                        .Sortable()
                        .Scrollable()
                        .DataSource(dts =>
                        {
                            dts.Ajax()
                                .Read(read => read.Action("formQuery", "Form"));
                        })
                        .ToHtmlString()
                )
                .Width(800)
                //.Height(520)
                .Modal(true)
                .Closable(true)
                .Actions(actions =>
                {
                    actions.Add().Text("Cancel");
                    actions.Add().Text("OК").Primary(true).Action("actionOK");
                })
                .Events(ev => ev.Open("openDialogForm"))
    )

    <div class="k-content hrm-block-right" style="height : 100vh">
        @using (Ajax.BeginForm("inserNewMenu", "MenuConfig", new AjaxOptions()
        {
            HttpMethod = "POST",
            OnSuccess = "onSuccess",
            OnFailure = "onFailure"
        }, new
        {
            id = "menu_config"
        }))
        {
            <div class="container"> 
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="formGroupExampleInput">MenuID</label>
                            <input type="text" readonly class="form-control" id="menu_id" name="MenuID" placeholder="MenuId">
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="formGroupExampleInput">MenuName</label>
                            <input type="text" class="form-control" id="menu_name" name="MenuName" placeholder="MenuName">
                        </div>
                    </div>
                     

                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group" >
                            <label for="formGroupExampleInput">FormId</label>
                            @*<input type="text" class="form-control" id="menu_form_id" name="FormID" placeholder="FormId">*@
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" id="menu_form_id" name="FormID" placeholder="FormId">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="openDialog()">Choose</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="formGroupExampleInput">Order Index</label>
                            <input type="number" class="form-control" id="menu_order_index" name="Seq" placeholder="OrderIndex">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <label for="formGroupExampleInput">Location</label>
                        <input type="hidden" class="form-control" id="menu_mother_id" name="MotherID" />
                        <div class="form-group mb-3">
                            @(Html.Kendo().DropDownTree()
                                        .Name("drpTreeMenu")
                                        .DataTextField("Name")
                                        .DataValueField("id")
                                        .HtmlAttributes(new { style = "width: 100%" })
                                        .DataSource(dataSource => dataSource
                                            .Read(read => read
                                                .Action("getAllMenu", "MenuConfig")
                                            )
                                        )
                                        .Events(evs =>
                                        {
                                            evs.Change("onChangeMotherId");
                                        })
                            )
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-check" style="margin-top:30px">
                            <input type="checkbox" class="form-check-input" id="menu_active" onclick="onSetMenuActive()" />
                            <label class="form-check-label" for="menu_active" style="line-height:inherit">Is Actived</label>
                            @*<input type="hidden" id="is_active" name="IsActive" />*@
                            <input type="hidden" class="form-control" id="menu_is_active" name="IsActive" value="" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm">
                        <div class="form-group">
                            <input class="btn btn-primary" type="submit" value="Submit">
                            <input class="btn btn-secondary" type="button" value="New" onclick="onNewMenu()">
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    </div>

    <script type="text/javascript">
        let treeview = null;
        let dropdowntree = null;
        let menuItem = null;
        let notification = null;
        let gridForm = null;
        $(document).ready(function () {
            treeview = $("#treeviewMenu").data("kendoTreeView");
            dropdowntree = $("#drpTreeMenu").data("kendoDropDownTree");
            notification = $("#notification").data("kendoNotification");
            gridForm = $("#gridForm").data("kendoGrid");
        });
        function trvMenuChange(e) {
            console.log("change");
        }
        function trvMenuSelect(e) {
            let data = treeview.dataItem(e.node);
            console.log(data.id);
            console.log("Selecting: " + this.text(e.node));
            //dropdowntree.value(data.id);
            $.get('/MenuConfig/getMenuDetail', { menu_id: data.id }, fillInfo);
        }

        function fillInfo(menuEntity) {
            console.log(menuEntity);
            menuItem = menuEntity
            document.getElementById("menu_id").value = menuItem.MenuID;
            document.getElementById("menu_name").value = menuItem.MenuName;
            document.getElementById("menu_form_id").value = menuItem.FormID;
            document.getElementById("menu_order_index").value = menuItem.Seq;
            let isActive = menuItem.IsActive;
            if (isActive === "1") {
                document.getElementById("menu_active").checked = true;
                document.getElementById("menu_is_active").value = "1";
            }
            else {
                document.getElementById("menu_active").checked = false;
                document.getElementById("menu_is_active").value = "0";
            }
            let parentId = menuItem.MotherID;
            document.getElementById("menu_mother_id").value = parentId;
            dropdowntree.value(parentId);
            document.getElementById("menu_config").setAttribute("data-ajax-method", "PUT");
            document.getElementById("menu_config").setAttribute("action", "/MenuConfig/updateMenu");
        }

        function onSetMenuActive() {
            let checkBox = document.getElementById("menu_active");
            // Get the output text
            let chkBoxValue = document.getElementById("menu_is_active");

            // If the checkbox is checked, display the output text
            if (checkBox.checked == true) {
                document.getElementById("menu_is_active").value = "1";
            } else {
                document.getElementById("menu_is_active").value = "0";
            }
            console.log(chkBoxValue);
        }

        function onNewMenu() {
            menuItem = null;
            document.getElementById("menu_id").value = "";
            document.getElementById("menu_name").value = "";
            document.getElementById("menu_form_id").value = "";
            document.getElementById("menu_order_index").value = "";
            document.getElementById("menu_active").checked = false;
            document.getElementById("menu_mother_id").value = "";
            document.getElementById("menu_is_active").value = "0";
            dropdowntree.value("");

            document.getElementById("menu_config").setAttribute("data-ajax-method", "POST");
            document.getElementById("menu_config").setAttribute("action", "/MenuConfig/inserNewMenu?Length=10");
        }

        function openDialog() {
            $("#formDialog").data("kendoDialog").open();
        }

        function actionOK(e) {
            let formList = $("#gridForm").data("kendoGrid");
            let selectedRow = formList.select()[0];
            let selectedDataItem = formList.dataItem(selectedRow);
            document.getElementById("menu_form_id").value = selectedDataItem.FORM_CODE;
        }

        function onFailure(data) {
            //alert('HTTP Status Code: ' + data.param1 + "  " + data.param2);
            notification.show({
                message: data.param2
            }, "success");

        }
        function onSuccess(data) {
            notification.show({
                message: data.param2
            }, "success");
            //alert('HTTP Status Code: ' + data.param1 + "  " + data.param2);
            //console.log(data);
            treeview.dataSource.read();
            dropdowntree.dataSource.read();
        }

        function onChangeMotherId() {
            console.log(dropdowntree.value());
            document.getElementById("menu_mother_id").value = dropdowntree.value();
        }

        function openDialogForm() {
            gridForm.dataSource.read();
        }
    </script>
